mkdir -p /mnt/sysimage/

fdisk -l
# observe /boot partition, assumed /dev/sda1 here

lvm pvscan
lvm vgscan
lvm lvscan
# observe root partition, assumed /dev/mapper/vg-lv here

mount /dev/mapper/vg-lv /mnt/sysimage/
mount /dev/sda1 /mnt/sysimage/boot/

mount /proc /mnt/sysimage/proc/ -o bind -t proc
mount /dev /mnt/sysimage/dev/ -o bind
mount /sys /mnt/sysimage/sys/ -o bind -t sysfs

chroot /mnt/sysimage/


Mount the CD and reinstall the filesystem, kernel, grub and redhat-logos packages from the /Packages directory with something like rpm -ivh --force /mnt/cd/Packages/<package-filename>.rpm

Copy the GRUB config file back with cp /etc/grub.conf /boot/grub/grub.conf and link it to menu.lst with cd /boot/grub; ln -s ./grub.conf menu.lst

Perform a GRUB installation with grub then find /grub/stage1 and root (hdX,Y) and setup (hdX)

I managed to recover a virtual machine this way, simulating your error with rm -rf /boot/*


**********************************************************************************************************************

rpm -ivh --force --noscripts --root=/mnt/sysimage packagename

**********************************************************************************************************************
Another action plan.

1. We found similar machine with same architecture and release.
2. Get the backup as follows.

# tar cvf /tmp/data.tar /bin /sbin /usr/bin /usr/sbin /lib /lib64 /usr/lib /usr/lib64

3. Then boot your bad machine into rescue, configure networking. Don't chroot but go into shell and run the commands below from the rescue environment machine itself.

# scp <user>@remote:/tmp/data.tar /mnt/sysimage
# cd /mnt/sysimage
# tar xvf data.tar

4. Then simply boot your machine back into normal mode and see if that boots your system properly or not.

**********************************************************************************************************************
